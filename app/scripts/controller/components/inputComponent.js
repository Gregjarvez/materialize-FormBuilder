import React from "react"import InputFactory from "../FormFactory.js"import Header from "./headerPartial"import EditTab from "./EditTab"import SettingBuild from "./setting"class InputComponent extends InputFactory {    constructor(props) {        super(props);        this.state = {};        this.setToolTip = this.setToolTip.bind(this);        this.removeTooltip = this.removeTooltip.bind(this);        this.destruct = this.destruct.bind(this);        this.handleSubmit = this.handleSubmit.bind(this);        this.constructSetting = this.constructSetting.bind(this);        this.toggleEdit = this.toggleEdit.bind(this);        this.getClassObject = this.getClassObject.bind(this)        this.getElementNode = this.getElementNode.bind(this)        this.generateHTMLCode = this.generateHTMLCode.bind(this)    }    componentWillMount() {        let {            elementType, defaultClass, placeHolder, required, disabled,            subtype, label        } = this.props.config;        return this.setState({            type: elementType,            defaultClass: defaultClass,            placeHolder: placeHolder,            required: required,            disabled: disabled,            subtype: subtype,            label: label,            tooltip: false,            editTab: false,                    })    }        componentDidMount() {        this.textInput.focus()    }        generateHTMLCode(){        let node = this.getElementNode(this.props.id);        return this.setState({ node })    }    render() {        let buildConfig = [this.state, ["tooltip", "editTab"]];        let BuildObject = Reflect.apply(this.constructSetting, null, buildConfig);        return (            <Header                mouseIn={this.setToolTip}                mouseOut={this.removeTooltip}                id={this.props.id}                destruct={this.destruct}                visible={this.state.tooltip}                toggleEdit={this.toggleEdit}                generateHTMLCode={this.generateHTMLCode}            >                <div className="row">                    <div className="input-field" id={this.props.id}>                        <input                            placeholder={this.state.placeHolder}                            type={this.state.type}                            className="validate"                            ref={(input) => this.textInput = input}                            disabled={this.state.disabled === "true" ? "disabled" : null}                            name="input-field"                            style={this.state.styles ? this.state.styles : void 0}                        />                        <label htmlFor="input-field">{this.state.label}</label>                    </div>                    {                        this.state.editTab &&                        <EditTab emitClass={this.getClassObject} className={this.state.defaultClass} htmlGen={} >                            <SettingBuild state={BuildObject} onsubmit={this.handleSubmit}/>                        </EditTab>                    }                </div>            </Header>        )    }}export default InputComponent